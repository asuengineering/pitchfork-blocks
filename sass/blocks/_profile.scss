/*--------------------------------------------------------------
# UDS Profiles

1. UDS Profile (Manual)
2. Mobile version
3. UDS Profiles (grid container)
--------------------------------------------------------------*/

.uds-person-profile {
	// This block will have a dedicated container/parent block.
	--max-width:none;

	// Map is-style-{size} declarations to previously set CSS rules.
	&.is-style-small {
		--pic-size: 120px;
	}

	&.is-style-micro {
		--pic-size: 78px;
		--person-name-size: 20px;
		--name-top-margin: 0;
		--person-profession-bottom-margin:0px;

		// Always flex-row.
		flex-direction: row;

		.person-name {
			margin-top:0;
		}

		//Remove maroon color on linked email.
		.person-profession a {
			font-weight:400;
			text-decoration:none;
		}
	}

	// Create fill-white variant. Background white w/ 1px border.
	&.fill-white {
		background-color: #ffffff;
		border-bottom: 1px solid $uds-color-base-gray-3;
		padding: $uds-size-spacing-2;

		.person {
			margin-bottom: $uds-size-spacing-2;
		}
	}

	// Has default image class.
	&.has-default-img .profile-img-placeholder {
		background-image: url('https://ui-avatars.com/api/?background=D0D0D0&color=191919&size=256&name=AZ&rounded=true&format=png')
	}

	// Move padding to profile image element as opposed to person.
	// Allows padding to be removed when there's no image.
	&[class*="is-style"] {
		.person {
			margin-left: 0;
		}

		.profile-img-container {
			margin-right: $uds-size-spacing-3;
		}
	}

	// At small widths, contact info should be in a column too.
	.person ul.person-contact-info {
		flex-direction: row !important;
		column-gap: $uds-size-spacing-2;
		flex-wrap: wrap;
		li {
			margin:0;
		}
	}
}


/*--------------------------------------------------------------
2. Profile block, mobile styles.
--------------------------------------------------------------*/

// Overrides media breakpoint width declaration in original.
@include media-breakpoint-down($lg) {
	.uds-person-profile {
		max-width: none;
	}
}

@include media-breakpoint-up($sm) {
	.uds-person-profile.fill-white {
		border: 1px solid $uds-color-base-gray-3;
		padding: $uds-size-spacing-4;

		.person {
			margin-bottom: 0;
		}
	}
}

@include media-breakpoint-up($sm) {
	.uds-person-profile .person ul.person-contact-info {
		flex-direction: row;
		gap: $uds-size-spacing-2;
	}
}

/*--------------------------------------------------------------
3. Profile grid, mobile-first.

Better support for :has() or container queries would allow for
more specific layout choices based on container columns + object size.
For now, this is what works for all size/column combos.
--------------------------------------------------------------*/

.uds-profile-grid {
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: 1fr;
	gap: $uds-size-spacing-4;
}

@include media-breakpoint-up($md) {
	.uds-profile-grid {
		&.col-one { grid-template-columns: minmax(0, 800px) }
		&.col-two, &.col-three { grid-template-columns: repeat(2, 1fr); }
	}
}

// At the $lg breakpoint, the .small size still breaks the layout.
// Micro is OK at $lg. But moving to $xl to be safe.
@include media-breakpoint-up($xl) {
	.uds-profile-grid {
		&.col-three { grid-template-columns: repeat(3, 1fr); }
	}
}


